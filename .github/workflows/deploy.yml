# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Set up npm
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Set up a PureScript toolchain
        # You may pin to the exact commit or the version.
        # uses: purescript-contrib/setup-purescript@2330ad9736aba56d65964a3335fe9368c9674db8
        uses: purescript-contrib/setup-purescript@v3.1.0
        with:
          # The compiler version to install. Examples: latest, 0.13.8
          purescript: "latest" # optional, default is latest
          # The Spago version to install. Examples: latest, 0.15.3
          spago: "latest" # optional, default is latest
          # # The psa version to install. Examples: latest, 0.7.2
          # psa: # optional, default is latest
          # # The purs-tidy version to install. Examples: latest, 0.1.1
          # purs-tidy: # optional
          # # The Zephyr version to install. Examples: latest, 0.3.2
          # zephyr: # optional

      # Installs the bundler used by spago
      - name: Install esbuild
        run: npm install -g esbuild

      - name: Cache PureScript dependencies
        uses: actions/cache@v4
        # This cache uses the .dhall files to know when it should reinstall
        # and rebuild packages. It caches both the installed packages from
        # the `.spago` directory and compilation artifacts from the `output`
        # directory. When restored the compiler will rebuild any files that
        # have changed. If you do not want to cache compiled output, remove
        # the `output` path.
        with:
          key: ${{ runner.os }}-spago-${{ hashFiles('**/*.dhall') }}
          path: |
            .spago
            output

      # Runs the command to compile and bundle the assets
      - name: Compile and bundle
        run: npm run bundle

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: prod/

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
